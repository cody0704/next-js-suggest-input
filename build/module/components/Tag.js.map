{"version":3,"file":"Tag.js","sourceRoot":"","sources":["../../../src/components/Tag.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAC,cAAc,EAAC,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAC,eAAe,EAAC,MAAM,mBAAmB,CAAC;AAiBlD;IAAyB,uBAAsB;IAA/C;QAAA,qEAkCC;QAhCC,sBAAgB,GAAoC,KAAK,CAAC,SAAS,EAAE,CAAC;QAEtE,YAAM,GAAG,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAnC,CAAmC,CAAC;;IA8BrD,CAAC;IA5BC,oBAAM,GAAN;QAEQ,IAAA,KAAiG,IAAI,CAAC,KAAK,EAAzG,KAAK,WAAA,EAAE,KAAK,WAAA,EAAE,QAAQ,cAAA,EAAE,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,MAAM,YAAA,EAAE,QAAQ,cAAA,EAAE,iBAAiB,uBAAA,EAAE,QAAQ,cAAe,CAAC;QAElH,IAAM,cAAc,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAI,cAAc,CAAC,SAAS,SAAI,cAAc,CAAC,iBAAmB,CAAC;QAE/F,OAAO,CACL,6BAAK,SAAS,EAAE,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ;YAChD,CAAC,QAAQ,IAAI,6BAAK,SAAS,EAAE,cAAc,CAAC,UAAU,IAAG,KAAK,CAAO;YACrE,QAAQ,IAAI,CACX,oBAAC,eAAe,IACd,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EACvC,SAAS,EAAE,cAAc,CAAC,UAAU,EACpC,MAAM,EAAE,UAAC,QAAQ,IAAK,OAAA,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAvB,CAAuB,EAC7C,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,SAAS,EAAE,SAAS,EACpB,iBAAiB,EAAE,iBAAiB,GACpC,CACH;YACD,6BAAK,SAAS,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,CACnD,CACP,CAAC;IAEJ,CAAC;IAEH,UAAC;AAAD,CAAC,AAlCD,CAAyB,KAAK,CAAC,SAAS,GAkCvC","sourcesContent":["import React from \"react\";\r\nimport {classSelectors} from \"../utils/selectors\";\r\nimport {ContentEditable} from \"./ContentEditable\";\r\n\r\n\r\n\r\ninterface Props {\r\n  value: string;\r\n  index: number;\r\n  editable: boolean;\r\n  readOnly: boolean;\r\n  inputRef: React.RefObject<HTMLInputElement>;\r\n  update: (i: number, value: string) => void;\r\n  remove: (i: number) => void;\r\n  validator?: (val: string) => boolean;\r\n  removeOnBackspace?: boolean;\r\n  tagStyle: {}\r\n}\r\n\r\nexport class Tag extends React.Component<Props> {\r\n\r\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  remove = () => this.props.remove(this.props.index);\r\n\r\n  render() {\r\n\r\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace, tagStyle } = this.props;\r\n\r\n    const tagRemoveClass = !readOnly ?\r\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\r\n\r\n    return (\r\n      <div className={classSelectors.tag} style={tagStyle}>\r\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\r\n        {editable && (\r\n          <ContentEditable\r\n            value={value}\r\n            inputRef={inputRef}\r\n            innerEditableRef={this.innerEditableRef}\r\n            className={classSelectors.tagContent}\r\n            change={(newValue) => update(index, newValue)}\r\n            remove={this.remove}\r\n            validator={validator}\r\n            removeOnBackspace={removeOnBackspace}\r\n          />\r\n        )}\r\n        <div className={tagRemoveClass} onClick={this.remove}/>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n"]}