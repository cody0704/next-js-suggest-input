{"version":3,"file":"ContentEditable.js","sourceRoot":"","sources":["../../../src/components/ContentEditable.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {safeHtmlString} from \"../utils/functions\";\r\n\r\ninterface Props {\r\n  value: string;\r\n  className: string;\r\n  innerEditableRef: React.RefObject<HTMLDivElement>;\r\n  inputRef: React.RefObject<HTMLInputElement>;\r\n  change: (value: string) => void;\r\n  remove: () => void;\r\n  validator?: (value: string) => boolean;\r\n  removeOnBackspace?: boolean;\r\n}\r\n\r\nexport class ContentEditable extends React.Component<Props> {\r\n\r\n  // Track focus state of editable tag\r\n  focused: boolean = false;\r\n\r\n  // Track if element has been removed from DOM\r\n  removed: boolean = false;\r\n\r\n  // Save value before input is focused / user starts typing\r\n  preFocusedValue: string = \"\";\r\n\r\n  componentDidMount() {\r\n    this.preFocusedValue = this.getValue();\r\n  }\r\n\r\n  onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\r\n\r\n    // Cancel paste event\r\n    e.preventDefault();\r\n\r\n    // Remove formatting from clipboard contents\r\n    const text = e.clipboardData.getData(\"text/plain\");\r\n\r\n    // Insert text manually from paste command\r\n    document.execCommand(\"insertHTML\", false, safeHtmlString(text));\r\n\r\n  }\r\n\r\n  onFocus = () => {\r\n    this.preFocusedValue = this.getValue();\r\n    this.focused = true;\r\n  }\r\n\r\n  onBlur = () => {\r\n\r\n    this.focused = false;\r\n\r\n    const ref = this.props.innerEditableRef.current;\r\n    const { validator, change } = this.props;\r\n\r\n    if (!this.removed && ref) {\r\n\r\n      // On blur, if no content in tag, remove it\r\n      if (ref.innerText === \"\") {\r\n        this.props.remove();\r\n        return;\r\n      }\r\n\r\n      // Validate input if needed\r\n      if (validator) {\r\n        const valid = validator(this.getValue());\r\n        // If invalidate, switch ref back to pre focused value\r\n        if (!valid) {\r\n          ref.innerText = this.preFocusedValue;\r\n          return;\r\n        }\r\n      }\r\n\r\n      change(ref.innerText);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n\r\n    // On enter, focus main tag input\r\n    if (e.keyCode === 13 || e.keyCode === 188) {\r\n      e.preventDefault();\r\n      this.focusInputRef();\r\n      return;\r\n    }\r\n\r\n    // On backspace, if no content in ref, remove tag and focus main tag input\r\n    const { removeOnBackspace } = this.props;\r\n    const value = this.getValue();\r\n    if (removeOnBackspace && e.keyCode === 8 && value === \"\") {\r\n      this.removed = true;\r\n      this.props.remove();\r\n      this.focusInputRef();\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  getValue = () => {\r\n    const ref = this.getRef();\r\n    return ref ? ref.innerText : \"\";\r\n  }\r\n\r\n  getRef = () => {\r\n    return this.props.innerEditableRef.current;\r\n  }\r\n\r\n  focusInputRef = () => {\r\n    const { inputRef } = this.props;\r\n    if (inputRef && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, className, innerEditableRef } = this.props;\r\n    return (\r\n      <div\r\n        ref={innerEditableRef}\r\n        className={className}\r\n        contentEditable={true}\r\n        onPaste={this.onPaste}\r\n        onFocus={this.onFocus}\r\n        onBlur={this.onBlur}\r\n        onKeyDown={this.onKeyDown}\r\n        dangerouslySetInnerHTML={{ __html: safeHtmlString(value) }}\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n"]}